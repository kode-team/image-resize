(function(f,h){typeof exports=="object"&&typeof module<"u"?module.exports=h():typeof define=="function"&&define.amd?define(h):(f=typeof globalThis<"u"?globalThis:f||self,f.ImageResize=h())})(this,function(){"use strict";const f={quality:.75,format:"jpg",outputType:"base64",width:320,height:null,reSample:2,bgColor:"#ffffff",sharpen:0};function h(n=320,t=240,e="#ffffff"){this.el=document.createElement("canvas"),this.ctx=this.el.getContext("2d"),this.el.width=n,this.el.height=t,this.ctx.fillStyle=e,this.ctx.fillRect(0,0,n,t)}const D={canvas:null,reSample:2,width:320,height:240,cx:0,cy:0,cw:0,ch:0,dx:0,dy:0,dw:0,dh:0,bgColor:"#ffffff"};function M(n,t,e){return new Promise(i=>{function a(r,c){const l=Math.pow(2,r);let s=new h(n.width*l,n.height*l,n.bgColor);s.ctx.drawImage(c,0,0,c.width*.5,c.height*.5),r>0?a(r-1,s.el):i(s.el)}a(t-1,e)})}function q(n){n=Object.assign({},D,n),n.reSample=Math.min(4,n.reSample),n.reSample=Math.max(0,n.reSample);const t=Math.pow(2,n.reSample);return new Promise(function(e,i){try{const a=new h(n.width*t,n.height*t,n.bgColor);a.ctx.drawImage(n.canvas,n.cx,n.cy,n.cw,n.ch,n.dx*t,n.dy*t,n.dw*t,n.dh*t),n.reSample>0?M(n,n.reSample,a.el).then(e):e(a.el)}catch(a){i(a)}})}function P(n,t="image/jpeg",e=.75){return t=S(t),new Promise(function(i,a){try{const r=n.toDataURL(t,e);i(r)}catch(r){a(r)}})}function T(n,t="image/jpeg",e=.75){return t=S(t),new Promise(function(i,a){try{const r=n.toDataURL(t,e),c=A(r);i(c)}catch(r){a(r)}})}function S(n){let t;switch(n){case"jpg":case"jpeg":t="image/jpeg";break;case"png":t="image/png";break;case"webp":t="image/webp";break;default:t=n;break}return t}function A(n){const t=atob(n.split(",")[1]),e=n.split(",")[0].split(":")[1].split(";")[0],i=new ArrayBuffer(t.length);let a=new Uint8Array(i);for(let c=0;c<t.length;c++)a[c]=t.charCodeAt(c);const r=new DataView(i);return new Blob([r],{type:e})}function B(n,t,e){const i=n.data,a=t.data,r=n.width,c=n.height,l=Math.round(Math.sqrt(e.length)),s=Math.floor(l/2),N=r,V=c;for(let o=0;o<V;o++)for(let d=0;d<N;d++){let O=0,j=0,z=0,R=0;for(let g=0;g<l;g++)for(let m=0;m<l;m++){const p=o+g-s,x=d+m-s;if(p>=0&&p<c&&x>=0&&x<r){let b=(p*r+x)*4,y=e[g*l+m];O+=i[b]*y,j+=i[b+1]*y,z+=i[b+2]*y,R+=i[b+3]*y}}const w=(o*N+d)*4;a[w]=O,a[w+1]=j,a[w+2]=z,a[w+3]=R}return t}function L(n,t=0){if(t<=0)return n;const e=document.createElement("canvas");e.width=n.width,e.height=n.height;const i=e.getContext("2d");i.drawImage(n,0,0);const a=i.getImageData(0,0,e.width,e.height),r=i.createImageData(e.width,e.height),c=B(a,r,[0,-1,0,-1,5,-1,0,-1,0]);i.putImageData(c,0,0);const l=n.getContext("2d");return l.globalAlpha=t||1,l.drawImage(e,0,0),n}function k(n){return new Promise((t,e)=>{const i=new FileReader;i.onload=a=>{var r;return t((r=a.target)==null?void 0:r.result)},i.onerror=e,i.readAsDataURL(n)})}function C(n){return new Promise((t,e)=>{const i=new Image;i.onload=()=>t(i),i.onerror=e,i.src=n,i.crossOrigin="anonymous",i.alt=""})}function u(n={},t={}){let e={};return Object.keys(n).forEach(i=>{e[i]=t[i]||n[i]}),e.width=Number(e.width),e.height=Number(e.height),e.quality=Number(e.quality),e.reSample=Number(e.reSample),e}async function E(n,t){let e;const i=await C(n);return e=new h(i.width,i.height,t.bgColor),e.ctx.drawImage(i,0,0),e.el}async function I(n,t){const e=await k(n),i=await C(e);let a=new h(i.width,i.height,t.bgColor);return a.ctx.drawImage(i,0,0),a.el}function F(n,t,e,i){let a=n,r=t;return e&&i&&(e>i?i=void 0:e=void 0),e?(a=e,r=t*(e/n)):i&&(a=n*(i/t),r=i),{width:Number(a),height:Number(r)}}class U{constructor(t={}){this.options=u(f,t)}async play(t){let e=await this.get(t);return e=await this.resize(e),e=await this.sharpen(e),e=await this.output(e),e}async get(t,e=void 0){var i;if(e=e?u(this.options,e):this.options,typeof t=="string")return await E(t,e);if(t instanceof File||t instanceof Blob)return await I(t,e);if(((i=t.tagName)==null?void 0:i.toLowerCase())==="input"&&t.type==="file")return await I(t.files[0],e);throw new Error("Not found source")}async resize(t,e=void 0){e=e?u(this.options,e):this.options;let i=F(t.width,t.height,e.width,e.height);return await q({canvas:t,reSample:e.reSample,width:i.width,height:i.height,cx:0,cy:0,cw:t.width,ch:t.height,dx:0,dy:0,dw:i.width,dh:i.height,bgColor:e.bgColor})}sharpen(t,e=void 0){return e=isNaN(e)?this.options.sharpen:e,L(t,e)}async output(t,e=void 0){switch(e=e?u(this.options,e):this.options,e.outputType){case"base64":return await P(t,e.format,e.quality);case"blob":return await T(t,e.format,e.quality);case"canvas":default:return t}}updateOptions(t){return this.options=u(this.options,t),this}}return U});
