(function(u,f){typeof exports=="object"&&typeof module!="undefined"?module.exports=f():typeof define=="function"&&define.amd?define(f):(u=typeof globalThis!="undefined"?globalThis:u||self,u.ImageResize=f())})(this,function(){"use strict";function u(i=320,a=240,l="#ffffff"){this.el=document.createElement("canvas"),this.ctx=this.el.getContext("2d"),this.el.width=i,this.el.height=a,this.ctx.fillStyle=l,this.ctx.fillRect(0,0,i,a)}const f={quality:.75,format:"jpg",outputType:"base64",width:320,height:null,reSample:2,bgColor:"#ffffff",saveExif:!1},o={canvas:null,reSample:2,width:320,height:240,cx:0,cy:0,cw:0,ch:0,dx:0,dy:0,dw:0,dh:0,bgColor:"#ffffff"};function d(i,a,l){return new Promise(r=>{function t(e,n){const c=Math.pow(2,e);let h=new u(i.width*c,i.height*c,i.bgColor);h.ctx.drawImage(n,0,0,n.width*.5,n.height*.5),e>0?t(e-1,h.el):r(h.el)}t(a-1,l)})}function m(i){i=Object.assign({},o,i),i.reSample=Math.min(4,i.reSample),i.reSample=Math.max(0,i.reSample);const a=Math.pow(2,i.reSample);return new Promise(function(l,r){try{const t=new u(i.width*a,i.height*a,i.bgColor);t.ctx.drawImage(i.canvas,i.cx,i.cy,i.cw,i.ch,i.dx*a,i.dy*a,i.dw*a,i.dh*a),i.reSample>0?d(i,i.reSample,t.el).then(l):l(t.el)}catch(t){r(t)}})}function g(i,a="image/jpeg",l=.75){return a=s(a),new Promise(function(r,t){try{const e=i.toDataURL(a,l);r(e)}catch(e){t(e)}})}function b(i,a="image/jpeg",l=.75){return a=s(a),new Promise(function(r,t){try{const e=i.toDataURL(a,l),n=y(e);r(n)}catch(e){t(e)}})}function s(i){let a;switch(i){case"jpg":case"jpeg":a="image/jpeg";break;case"png":a="image/png";break;default:a=i;break}return a}function y(i){const a=atob(i.split(",")[1]),l=i.split(",")[0].split(":")[1].split(";")[0],r=new ArrayBuffer(a.length);let t=new Uint8Array(r);for(let c=0;c<a.length;c++)t[c]=a.charCodeAt(c);const e=new DataView(r);return new Blob([e],{type:l})}function x(i){return new Promise((a,l)=>{const r=new FileReader;r.onload=t=>{var e;return a((e=t.target)==null?void 0:e.result)},r.onerror=l,r.readAsDataURL(i)})}function w(i){return new Promise((a,l)=>{const r=new Image;r.onload=()=>a(r),r.onerror=l,r.src=i,r.crossOrigin="anonymous",r.alt=""})}function S(i={}){this.options=a(f,i);function a(t={},e={}){let n={};return Object.keys(t).forEach(c=>{n[c]=e[c]||t[c]}),n.width=Number(n.width),n.height=Number(n.height),n.quality=Number(n.quality),n.reSample=Number(n.reSample),n}async function l(t,e){let n;const c=await w(t);return n=new u(c.width,c.height,e.bgColor),n.ctx.drawImage(c,0,0),n.el}async function r(t,e){const n=await x(t),c=await w(n);let h=new u(c.width,c.height,e.bgColor);return h.ctx.drawImage(c,0,0),h.el}this.play=async t=>{let e=await this.get(t);return e=await this.resize(e),e=await this.resize(e),e=await this.output(e),e},this.get=async function(t,e=null){var n;if(e=e?a(this.options,e):this.options,typeof t=="string")return await l(t,e);if(t instanceof File||t instanceof Blob)return await r(t,e);if(((n=t.tagName)==null?void 0:n.toLowerCase())==="input"&&t.type==="file")return await r(t.files[0],e);throw new Error("Not found source")},this.resize=async(t,e)=>{e=e?a(this.options,e):this.options;let n=p(t.width,t.height,e.width,e.height);return await m({canvas:t,reSample:e.reSample,width:n.width,height:n.height,cx:0,cy:0,cw:t.width,ch:t.height,dx:0,dy:0,dw:n.width,dh:n.height,bgColor:e.bgColor})},this.output=function(t,e){return e=e?a(this.options,e):this.options,new Promise((n,c)=>{switch(e.outputType){case"base64":g(t,e.format,e.quality).then(n).catch(c);break;case"blob":b(t,e.format,e.quality).then(n).catch(c);break;case"canvas":default:n(t);break}})},this.updateOptions=function(t){return this.options=a(this.options,t),this}}function p(i,a,l,r){let t=i,e=a;return l&&r&&(l>r?r=void 0:l=void 0),l?(t=l,e=a*(l/i)):r&&(t=i*(r/a),e=r),{width:Number(t),height:Number(e)}}return S});
